spring.application.name=demo
# ===================================================================
# CONFIGURAÇÕES GERAIS DA APLICAÇÃO
# =================================================================

# Porta padrão em que a aplicação irá rodar.
server.port=8080


# ===================================================================
# CONFIGURAÇÃO DO BANCO DE DADOS (DATASOURCE) - MariaDB
# ===================================================================
# URL de conexão JDBC para o seu banco MariaDB.
# MUDE "nome_do_seu_banco" para o nome do seu banco de dados real.
spring.datasource.url=jdbc:mariadb://localhost:3306/backend

# Usuário e senha para acessar o banco de dados.
# MUDE A SENHA para a que você usa no seu ambiente.
spring.datasource.username=root
spring.datasource.password=aluno

# Driver de conexão (boa prática especificar).
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver


# ===================================================================
# CONFIGURAÇÃO DA JPA E HIBERNATE
# ===================================================================
# Estratégia de geração do schema. 'update' é ideal para o ambiente de desenvolvimento.
spring.jpa.hibernate.ddl-auto=update

# Dialeto específico para o MariaDB. (Opcional em versões mais novas, mas bom para garantir).
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect


# ===================================================================
# CONFIGURAÇÃO DE SEGURANÇA
# ===================================================================
# Chave secreta que será usada para assinar e validar os tokens JWT (se implementar no futuro).
# IMPORTANTE: MUDE ESTE VALOR para uma string longa, aleatória e segura.
# Guarde esta chave em segredo!
api.security.token.secret=algoLongoSeguro

# Define um usuário e senha fixos para testes
spring.security.user.name=root
spring.security.user.password=aluno

# ===================================================================
# CONFIGURAÇÕES DE DEBUG (MUITO ÚTEIS PARA DESENVOLVIMENTO)
# ===================================================================
# Mostra no console o SQL que o Hibernate está executando por baixo dos panos.
spring.jpa.show-sql=true

# Formata o SQL exibido acima para que fique mais legível.
spring.jpa.properties.hibernate.format_sql=true

# Adiciona comentários ao SQL gerado para indicar qual parte do código o gerou.
spring.jpa.properties.hibernate.use_sql_comments=true